interface ProductInterface {
    attributes: [Attribute] @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\AttributesResolver")
    source_items: [SourceItem] @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\SourceItemsResolver")
    sources: [Sources] @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\SourcesResolver")
    salable_quantity: Float @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\SalableQuantityResolver")
    configuration_options: [ConfigurationOption] @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\ConfigurationOptionsResolver")
}

type ConfigurationOption {
    code: String
    value: String
    label: String
}

type Attribute {
    code: String
    value: String
    type: String
    swatch: String
}

type Aggregation {
    type: String
}

interface AggregationOptionInterface {
    swatch_value: String
}

interface OrderItemInterface @doc(description: "Order item details") @typeResolver(class: "Magento\\SalesGraphQl\\Model\\TypeResolver\\OrderItem") {
    product_image: String
    product_options: [OrderItemOptions]
}

type OrderItemOptions {
    label: String
    value: String
}

type SourceItem {
    sku: String
    source_code: String
    quantity: Int
    status: Int
}

type Sources {
    source_code: String
    name: String
    email: String
    contact_name: String
    enabled: Boolean,
    description: String
    country_id: String
    city: String
    street: String
    postcode: String
    phone: String
    fax: String
}

input ProductAttributeSortInput {
    is_salable: SortEnum
}

input CartAddressInput {
    vat_id: String
}

interface CartAddressInterface {
    vat_id: String  
}

interface CartItemInterface {
    parent: ProductInterface @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\ParentResolver")
}

interface OrderItemInterface {
    product: ProductInterface @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\OrderItemProductResolver")
    parent: ProductInterface @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\ParentResolver")
}

type CustomerOrder {
    tracking_number: String @resolver(class: "Appstractsoftware\\MagentoAdapter\\CustomGQL\\Model\\Resolver\\TrackingNumberResolver")
}

input CustomerOrdersFilterInput {
    status: FilterStringTypeInput @doc(description: "Filters by order status.")
}
